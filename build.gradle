plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
}

version = "${project.minecraft}-${project.modVersion}"
group = "com.sammy.${project.modId}"
archivesBaseName = project.modId

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

sourceSets {
    main.resources.srcDirs += 'src/main/generated_resources'
}
minecraft {
    mappings channel: 'parchment', version: "${project.parchment}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            mods {
                toolsharpening {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                toolsharpening {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', "${project.modId}", '--all', '--output', file('src/main/generated_resources/'), '--existing', file('src/main/resources/')

            mods {
                self {
                    sources sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	maven {
        name = "Curios Maven"
        url = "https://maven.theillusivec4.top/"
    }
	maven {
		name = "JEI Maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
    maven {
        name = "tterrag"
        url = "https://maven.tterrag.com/"
    }
}
dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraft}-${project.forge}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    compileOnly fg.deobf("mezz.jei:jei-${project.minecraft}-forge-api:11.5.0.297")
    runtimeOnly fg.deobf("mezz.jei:jei-${project.minecraft}-forge:11.5.0.297")
}

mixin {
    add sourceSets.main, "${project.modId}.refmap.json"
    config "${project.modId}.mixins.json"
}

jar {
    manifest {
        attributes([
            "Specification-Title": "toolsharpening",
            "Specification-Vendor": "toolsharpeningsareus",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"toolsharpeningsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "tool_sharpening.mixins.json"
        ])
    }
}
jar.finalizedBy('reobfJar') 

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}